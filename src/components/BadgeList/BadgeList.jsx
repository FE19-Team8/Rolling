import { useMemo, useState } from 'react';
import EmojiBadge from '../EmojiBadge/EmojiBadge';

//ÏòàÏãú Î±ÉÏßÄÎ¶¨Ïä§Ìä∏ Î¶¨Ïä§Ìä∏Î•º ÏÇ¨Ïö©ÌïòÏãúÎäî ÌéòÏù¥ÏßÄÏóêÏÑú Ïì∞ÏÑ∏Ïöî
// const mockBadges: Badge[] = [
//   { emoji: "üëç", count: 2 },
//   { emoji: "üòç", count: 1 },
//   // ...
// ];

const BadgeList = ({ badges = [], showMore = true }) => {
  const [isExpanded, setIsExpanded] = useState(false);

  const maxVisible = 3;
  const expandedVisible = 8;

  const sortedBadges = useMemo(() => {
    return [...badges].sort((a, b) => b.count - a.count);
  }, [badges]);

  const visibleBadges = isExpanded
    ? sortedBadges.slice(0, expandedVisible)
    : sortedBadges.slice(0, maxVisible);

  return (
    <>
      <div className="flex flex-wrap gap-2">
        {visibleBadges.map((badge, index) => (
          <div key={index} className="basis-1/5">
            <EmojiBadge emoji={badge.emoji} count={badge.count} />
          </div>
        ))}
      </div>

      {/* showMoreÍ∞Ä trueÏùºÎïå ÎÇòÏò§Îäî ÎçîÎ≥¥Í∏∞, Ï†ëÍ∏∞ Î≤ÑÌäºÏûÖÎãàÎã§. */}
      {showMore && sortedBadges.length > maxVisible && (
        <button
          onClick={() => setIsExpanded(!isExpanded)}
          className="text-sm text-blue-600 underline"
        >
          {isExpanded ? 'Ï†ëÍ∏∞ ‚ñ≤' : 'ÎçîÎ≥¥Í∏∞ ‚ñº'}
        </button>
      )}
    </>
  );
};

export default BadgeList;
